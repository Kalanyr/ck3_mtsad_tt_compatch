host_feast_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	ai_check_interval = 60
	
	sort_order = 69

	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				desc = host_exotic_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				desc = host_lavish_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				desc = host_grand_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 2 }
				}
				desc = host_modest_feast_decision
			}
			desc = host_feast_decision
		}
	}

	cost = {
		gold = feast_activity_cost
	}


	cooldown = { days = standard_feast_cooldown_time }

	desc = host_feast_decision_opening_desc
	selection_tooltip = host_feast_decision_tooltip

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		capital_province = {
			spawn_activity = {
				type = activity_feast
				owner = root
			}
		}
		custom_tooltip = host_feast_decision_desc_vassals
		if = {
			limit = {
				is_independent_ruler = no
			}
			custom_tooltip = host_feast_decision_desc_liege_opinion
		}
		if = {
			limit = {
				employs_court_position = court_musician_court_position
				any_court_position_holder = {
			        type = court_musician_court_position
			        is_physically_able = yes
			    }
			}
			custom_tooltip = host_feast_decision_desc_court_musician_opinion
		}

		#Piety gain
		if = {
			limit = {
				faith = {
					OR = {
						has_doctrine_parameter = piety_from_feasts_active
						AND = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
					}
				}
			}
			add_piety = {
				value = 0
				faith = {
					if = {
						limit = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
						add = major_piety_value
					}
					if = {
						limit = {
							has_doctrine_parameter = piety_from_feasts_active
						}
						add = medium_piety_value
					}
					if = {
						limit = { # Hedonistic can potentially stack, in which case let's stack. The other three are mutually exclusive.
							has_doctrine = tenet_hedonistic
							OR = {
								has_doctrine = tenet_ritual_celebrations
								has_doctrine = mz_tenet_animism
								has_doctrine = mz_tenet_children_of_perun
							}
						}
						add = medium_piety_value
					}
				}
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}
				min = medium_piety_value #Always give some piety, even if we don't have any of the specified tenets.
			}
		}

		#Prestige gain from Tradition or Struggle
		if = {
			limit = {
				OR = {
					culture = {
						has_cultural_parameter = refined_feasts
					}
					any_character_struggle = {
						involvement = involved
						is_struggle_type = iberian_struggle
						has_struggle_phase_parameter = struggle_prestige_from_feast
					}
				}
			}
			add_prestige = {
				value = medium_prestige_value
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}
				if = {
					limit = {
						any_character_struggle = {
							involvement = involved
							is_struggle_type = iberian_struggle
							has_struggle_phase_parameter = struggle_prestige_from_feast
						}
					}
					multiply = 1.25
				}
			}
		}

		#Stress loss
		if = {
			limit = {
				OR = {
					has_trait = shy
				}
			}
			custom_tooltip = host_feast_decision_desc_shy
		}
		else = {
			if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				stress_impact = {
					base = exotic_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				stress_impact = {
					base = lavish_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				stress_impact = {
					base = medium_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value <= 1 }
				}
				stress_impact = {
					base = meager_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else = {
				stress_impact = {
					base = feast_stress_loss_value
					gluttonous = activity_stress_loss_impact
					gregarious = activity_stress_loss_impact
					reveler_1 = activity_stress_loss_impact
					reveler_2 = activity_stress_loss_impact
					reveler_3 = activity_stress_loss_impact
					drunkard = activity_stress_loss_impact
					comfort_eater = activity_stress_loss_impact
					generous = activity_stress_loss_impact
					greedy = activity_stress_gain_impact
				}
			}
		}
		if = {
			limit = { exists = var:protected_alcohol_stores }
			set_variable = {
				name = protected_alcohol_stores
				value = 0
			}
		}
	}

	ai_potential = {
		short_term_gold > standard_activity_cost
		war_chest_gold >= halved_ai_war_chest_gold_maximum
		NOT = {
			has_trait = reclusive
		}
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_sociability = 1
			ai_greed = -0.5
		}

		modifier = {
			add = 30 # Has Greed of 20, so this is only (-10 + 30 = +20)
			has_trait = gluttonous
		}
		modifier = {
			add = 12.5 # Has Greed of 5, so this is only (-2.5 + 12.5 = +10)
			has_trait = comfort_eater
		}
		modifier = {
			add = 47.5 # Has Greed of 75, so this is only (-37.5 + 45 = +10)
			has_trait = ambitious
		}

		modifier = { # Too busy booming the economy
			add = -50
			OR = {
				ai_has_economical_boom_personality = yes
				has_character_flag = ai_boom
			}
		}
		
		modifier = { # Work first, play later
			add = -35
			exists = capital_county
			capital_county.title_province = {
				free_building_slots > 0
			}
		}

		modifier = {
			add = 35
			stress > low_stress
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine_parameter = mandatory_feast_attendance
			}
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine = tenet_hedonistic
			}
		}
		
		modifier = {
			any_character_struggle = {
				involvement = involved
				phase_has_catalyst = catalyst_invite_diff_faith_culture_to_feast
			}
			add = {
				value = 0
				if = {
					limit = {
						has_character_flag = agenda_towards_escalation
					}
					add = -25
				}
				else_if = {
					limit = {
						has_character_flag = agenda_towards_deescalation
					}
					add = 50
				}
			}
		}
	}
}

start_hunt_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_activity.dds"
	ai_check_interval = 60
	
	sort_order = 68

	cost = {
		gold = hunt_activity_cost
	}

	cooldown = { days = standard_hunting_cooldown_time }

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
		NOT = {
			culture = { has_cultural_parameter = cannot_hunt }
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		custom_tooltip = start_hunt_decision_go_on_hunt

		hidden_effect = {
			if = {
				limit = {
					has_character_flag = free_hunt
				}
				remove_character_flag = free_hunt
			}
		}

		if = {
			limit = {
				faith = { has_doctrine_parameter = mz_piety_from_hunts_acitve }
			}
			add_piety = medium_piety_value
		}

		#Stress loss
		if = {
			limit = {
				has_trait = lazy
			}
			custom_tooltip = start_hunt_decision_stress_lazy
		}
		else = {
			stress_impact = {
				base = hunt_stress_loss_value
				craven = activity_stress_gain_impact
				diligent = activity_stress_loss_impact
				athletic = activity_stress_loss_impact
				sadistic = activity_stress_loss_impact
				brave = activity_stress_loss_impact
				hunter_1 = activity_stress_loss_impact
				hunter_2 = activity_stress_loss_impact
				hunter_3 = activity_stress_loss_impact
				generous = activity_stress_loss_impact
			}
		}

		# Prestige tooltips
		## Notification of potential bonus prestige via events
		custom_tooltip = start_hunt_decision_prestige
		## Notification of extra/reduced prestige due to servants amenity
		### Low servants: you may get less prestige if your hunt is unsuccessful, and it'll be harder to begin with.
		if = {
			limit = {
				has_royal_court = yes
				NOT = { has_government = tribal_government }
				amenity_level = {
					type = court_servants
					value <= medium_amenity_level
				}
			}
			custom_tooltip = start_hunt_decision.tt.servants_prestige.reduced
		}
		### High servants: you may get extra prestige if your hunt is successful.
		if = {
			limit = {
				has_royal_court = yes
				NOT = { has_government = tribal_government }
				amenity_level = {
					type = court_servants
					value >= very_high_amenity_level
				}
			}
			custom_tooltip = start_hunt_decision.tt.servants_prestige.increased
		}
		### Greater chance of success if you have a Master of the Hunt employed.
		if = {
			limit = {
				employs_court_position = master_of_hunt_court_position
				any_court_position_holder = {
			        type = master_of_hunt_court_position
			        is_physically_able = yes
			    }
			}
			custom_tooltip = start_hunt_decision_master_of_hunt
		}
		
		hidden_effect = {
			random_sub_realm_barony = {
				title_province = {
					spawn_activity = {
						type = activity_hunt
						owner = root
					}
				}
			}
		}
	}
	
	ai_potential = {
		short_term_gold > standard_activity_cost
		war_chest_gold >= halved_ai_war_chest_gold_maximum
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_energy = 1
			ai_greed = -0.5
			ai_compassion = -0.5
		}

		modifier = {
			add = 10
			has_trait_rank = {
				trait = education_martial
				rank > 0
			}
		}
		modifier = {
			add = 10
			has_trait_rank = {
				trait = education_martial
				rank > 2
			}
		}

		modifier = {
			add = 35
			stress > low_stress
		}

		modifier = { # Too busy booming the economy
			add = -50
			OR = {
				ai_has_economical_boom_personality = yes
				has_character_flag = ai_boom
			}
		}
		
		modifier = { # Work first, play later
			add = -35
			exists = capital_county
			capital_county.title_province = {
				free_building_slots > 0
			}
		}
	}
}